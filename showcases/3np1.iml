prog threeNpOne (in i: int, in j: int, out cycles: int) {

    def calcCycles(in n: int, out count: int)
    {
        count := 1;
        while (n /= 1)
        {
            if ((n % 2) = 1)
            {
                n := (3 * n) + 1;
            }
            else
            {
                n := n / 2;
            }
            count := count + 1;
        }
    }

    var curr: int;

    while (i <= j) { 
        calcCycles(i, curr);
        if (curr > cycles) {
            cycles := curr;
        }
        i := i + 1;
    }
}